"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"ccf0ec2c7f09\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/NTNjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImNjZjBlYzJjN2YwOVwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n\n\n\nclass ApiClient {\n    // Fetch all active users\n    async getUsers() {\n        const response = await this.client.get(\"/users\");\n        return response.data;\n    }\n    // Token management\n    setTokens(accessToken, refreshToken) {\n        this.accessToken = accessToken;\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(\"accessToken\", accessToken, {\n            expires: 7,\n            secure: true,\n            sameSite: \"strict\"\n        });\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(\"refreshToken\", refreshToken, {\n            expires: 30,\n            secure: true,\n            sameSite: \"strict\"\n        });\n    }\n    clearTokens() {\n        this.accessToken = null;\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(\"accessToken\");\n        js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].remove(\"refreshToken\");\n    }\n    // Auth methods\n    async login(credentials) {\n        const response = await this.client.post(\"/auth/login\", credentials);\n        const { accessToken, refreshToken } = response.data.data;\n        this.setTokens(accessToken, refreshToken);\n        return response.data;\n    }\n    async register(data) {\n        const response = await this.client.post(\"/auth/register\", data);\n        const { accessToken, refreshToken } = response.data.data;\n        this.setTokens(accessToken, refreshToken);\n        return response.data;\n    }\n    async refreshToken(refreshToken) {\n        const response = await this.client.post(\"/auth/refresh\", {\n            refreshToken\n        });\n        return response.data;\n    }\n    async logout() {\n        try {\n            await this.client.post(\"/auth/logout\");\n        } catch (error) {\n        // Ignore logout errors\n        } finally{\n            this.clearTokens();\n        }\n    }\n    async getProfile() {\n        const response = await this.client.get(\"/auth/profile\");\n        return response.data;\n    }\n    async updateProfile(data) {\n        const response = await this.client.put(\"/auth/profile\", data);\n        return response.data;\n    }\n    async changePassword(data) {\n        const response = await this.client.put(\"/auth/change-password\", data);\n        return response.data;\n    }\n    // Project methods\n    async getProjects(filters) {\n        const params = new URLSearchParams();\n        if (filters) {\n            Object.entries(filters).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null) {\n                    params.append(key, String(value));\n                }\n            });\n        }\n        const response = await this.client.get(\"/projects?\".concat(params));\n        return response.data;\n    }\n    async getProject(id) {\n        const response = await this.client.get(\"/projects/\".concat(id));\n        return response.data;\n    }\n    async createProject(data) {\n        const response = await this.client.post(\"/projects\", data);\n        return response.data;\n    }\n    async updateProject(id, data) {\n        const response = await this.client.put(\"/projects/\".concat(id), data);\n        return response.data;\n    }\n    async deleteProject(id) {\n        const response = await this.client.delete(\"/projects/\".concat(id));\n        return response.data;\n    }\n    async getProjectStats(id) {\n        const response = await this.client.get(\"/projects/\".concat(id, \"/stats\"));\n        return response.data;\n    }\n    // Task methods\n    async getTasks(filters) {\n        const params = new URLSearchParams();\n        if (filters) {\n            Object.entries(filters).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null) {\n                    params.append(key, String(value));\n                }\n            });\n        }\n        const response = await this.client.get(\"/tasks?\".concat(params));\n        return response.data;\n    }\n    async getTask(id) {\n        const response = await this.client.get(\"/tasks/\".concat(id));\n        return response.data;\n    }\n    async createTask(data) {\n        const response = await this.client.post(\"/tasks\", data);\n        return response.data;\n    }\n    async updateTask(id, data) {\n        const response = await this.client.put(\"/tasks/\".concat(id), data);\n        return response.data;\n    }\n    async deleteTask(id) {\n        const response = await this.client.delete(\"/tasks/\".concat(id));\n        return response.data;\n    }\n    async addTaskComment(id, comment) {\n        const response = await this.client.post(\"/tasks/\".concat(id, \"/comments\"), {\n            comment\n        });\n        return response.data;\n    }\n    async getMyTasks(filters) {\n        const params = new URLSearchParams();\n        if (filters) {\n            Object.entries(filters).forEach((param)=>{\n                let [key, value] = param;\n                if (value !== undefined && value !== null) {\n                    params.append(key, String(value));\n                }\n            });\n        }\n        const response = await this.client.get(\"/tasks/my-tasks?\".concat(params));\n        return response.data;\n    }\n    // Analytics methods\n    async getDashboardAnalytics() {\n        const response = await this.client.get(\"/analytics/dashboard\");\n        return response.data;\n    }\n    async getProjectAnalytics(startDate, endDate) {\n        const params = new URLSearchParams();\n        if (startDate) params.append(\"startDate\", startDate);\n        if (endDate) params.append(\"endDate\", endDate);\n        const response = await this.client.get(\"/analytics/projects?\".concat(params));\n        return response.data;\n    }\n    async getTeamAnalytics(startDate, endDate) {\n        const params = new URLSearchParams();\n        if (startDate) params.append(\"startDate\", startDate);\n        if (endDate) params.append(\"endDate\", endDate);\n        const response = await this.client.get(\"/analytics/team?\".concat(params));\n        return response.data;\n    }\n    // Utility method to check if user is authenticated\n    isAuthenticated() {\n        return !!this.accessToken;\n    }\n    // Get current access token\n    getAccessToken() {\n        return this.accessToken;\n    }\n    constructor(){\n        this.accessToken = null;\n        this.client = axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n            baseURL: \"http://localhost:5000/api\" || 0,\n            timeout: 10000,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        // Load token from cookies on initialization\n        this.accessToken = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"accessToken\") || null;\n        // Set up request interceptor to add auth token\n        this.client.interceptors.request.use((config)=>{\n            if (this.accessToken) {\n                config.headers.Authorization = \"Bearer \".concat(this.accessToken);\n            }\n            return config;\n        }, (error)=>{\n            return Promise.reject(error);\n        });\n        // Set up response interceptor for error handling and token refresh\n        this.client.interceptors.response.use((response)=>{\n            return response;\n        }, async (error)=>{\n            var _error_response, _error_response1;\n            const originalRequest = error.config;\n            if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401 && !originalRequest._retry) {\n                originalRequest._retry = true;\n                try {\n                    const refreshToken = js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"refreshToken\");\n                    if (refreshToken) {\n                        const response = await this.refreshToken(refreshToken);\n                        this.setTokens(response.data.accessToken, response.data.refreshToken);\n                        return this.client(originalRequest);\n                    }\n                } catch (refreshError) {\n                    this.logout();\n                    window.location.href = \"/login\";\n                }\n            }\n            // Show error toast for non-401 errors\n            if (((_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.status) !== 401) {\n                var _error_response_data, _error_response2;\n                const message = ((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : (_error_response_data = _error_response2.data) === null || _error_response_data === void 0 ? void 0 : _error_response_data.message) || \"An error occurred\";\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_1__.toast.error(message);\n            }\n            return Promise.reject(error);\n        });\n    }\n}\n// Create singleton instance\nconst apiClient = new ApiClient();\n/* harmony default export */ __webpack_exports__[\"default\"] = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});